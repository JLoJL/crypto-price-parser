from bs4 import BeautifulSoup
import requests
import time


#Start boolean
runApp = True

#Iput name of finding coin
find_crypto = input('Print crypto name in formate - BTC, ETH, LTC, TRX -->')
#Input to get equal for coin
find_equal = input(f'{find_crypto} / (USD, USDT, RUB, EUR) -->')

#List of valid name
valid_crypto = ['BTC', 'BCH','XRP','USDT','LTC','TRX','DOGE','ETH']
valid_equal = ['USD','USDT','RUB','EUR']


# requesy
def do_request(find_crypto, find_equal):
	request = requests.get(f'https://payeer.com/ru/trade/{find_crypto}_{find_equal}')
	return request

# bs4 request
def take_soup_from_req(init_do_request):
	bs_request = BeautifulSoup(init_do_request.text, 'lxml')
	return bs_request

# get price
def take_price(init_take_soup_from_req):
	lxml_crypto_price = init_take_soup_from_req.find('div', class_='trade-management__current-pair_price')
	finnaly_crypto_price = lxml_crypto_price.text
	finnaly_crypto_price = finnaly_crypto_price.replace(',','.')
	return finnaly_crypto_price

#Main
while runApp == True:
	if find_crypto in valid_crypto and find_equal in valid_equal:
	#MODULE REQUESTS request 																							
		init_do_request = do_request(find_crypto, find_equal)	
	#MODULE BS4 request 											 									 					 
		init_take_soup_from_req = take_soup_from_req(init_do_request)
	#GET COIN PRICE
		init_crypto_price = take_price(init_take_soup_from_req)
	#OUTPUT
		print('\n')
		print(f'DATE :{time.asctime()}',   
			f'             INFO:{find_crypto}/{find_equal} price : {init_crypto_price} {find_equal}')
		time.sleep(10)
	else:
		print('Oops ERROR... Maybe, u did print wrong crypto or currency:(')
		time.sleep(3)
		break





















































































































































































































































































































































































































































































































	